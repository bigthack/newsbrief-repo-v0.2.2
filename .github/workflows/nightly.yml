name: nightly-demo

on:
  schedule:
    - cron: '30 10 * * *'  # ~06:30 America/New_York
  workflow_dispatch:
    inputs:
      topic:
        description: 'Topic keyword (e.g., tech, climate)'
        required: false
        default: ''
      limit:
        description: 'Max stories'
        required: false
        default: '3'
      format:
        description: 'Output format (html, txt, json, cards, both, all)'
        required: false
        default: 'all'

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  demo:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: pip
          cache-dependency-path: pyproject.toml

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]
          # extra safety if extras not picked up
          pip install jinja2 jsonschema feedparser trafilatura pyyaml

      # Scheduled runs (kept as fixtures for now)
      - name: Run scheduled demos tech and climate
        if: github.event_name == 'schedule'
        run: |
          python scripts/demo.py --topic tech --limit 3 --format all --outdir scripts/out/tech
          python scripts/demo.py --topic climate --limit 3 --format all --outdir scripts/out/climate

      # Manual run â†’ live ingestion
      - name: Run manual live demo
        if: github.event_name == 'workflow_dispatch'
        run: |
          TOPIC="${{ github.event.inputs.topic }}"
          LIMIT="${{ github.event.inputs.limit }}"
          python scripts/live_demo.py --topic "${TOPIC:-tech}" --limit "${LIMIT:-3}" --outdir scripts/out/live

      - name: Debug list generated outputs
        run: |
          echo "::group::scripts/out"
          ls -lah scripts/out || true
          echo
          echo "Recursive:"
          find scripts/out -maxdepth 4 -type f -print || true
          echo "::endgroup::"

      - name: Validate manifests
        run: python scripts/validate_manifest.py

      - name: Build feeds
        run: |
          OWNER="${GITHUB_REPOSITORY%/*}"
          REPO="${GITHUB_REPOSITORY#*/}"
          BASE_URL="https://${OWNER}.github.io/${REPO}"
          python scripts/build_feeds.py --base-url "$BASE_URL" --public-dir public

      - name: Build Pages index
        run: python scripts/build_pages_index.py

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: public

  deploy:
    needs: demo
    runs-on: ubuntu-latest
    environment:
      name: demo
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Post URL to summary
        run: |
          echo "### GitHub Pages URL" >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.deployment.outputs.page_url }}" >> $GITHUB_STEP_SUMMARY
